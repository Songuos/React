{"ast":null,"code":"//引入Count的UI组件\nimport CountUI from '../../components/Count';\nimport { createDecrementAction } from '../../redux/count_action';\n\n//引入connect用于连接UI组件与redux\nimport { connect } from 'react-redux';\n\n/*\n    1.mapStateToProps是一个函数，返回一个对象，\n    2.对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\n    3.mapStateToProps用于传递状态\n*/\nfunction mapStateToProps(state) {\n  return {\n    count: state\n  };\n}\n\n//函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\n\n/*\n    1.mapDispatchToProps是一个函数，返回一个对象，\n    2.对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\n    3.mapDispatchToProps用于传递操作状态的方法\n*/\nfunction mapDispatchToProps(dispatch) {\n  return {\n    jia: number => {\n      //通知redux执行加法\n      dispatch(createDecrementAction(number));\n    }\n  };\n}\n\n/*\n    1.使用connect()()创建并暴露一个Count的容器组件\n    2.connect(mapStateToProps, mapDispatchToProps)(CountUI)\n*/\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);","map":{"version":3,"names":["CountUI","createDecrementAction","connect","mapStateToProps","state","count","mapDispatchToProps","dispatch","jia","number"],"sources":["/Users/songuo/Library/CloudStorage/SynologyDrive-Work/05 自研/React/19_文件处理进度更新_react/fileuploadlongrun/src/containers/Count/index.jsx"],"sourcesContent":["//引入Count的UI组件\nimport CountUI from '../../components/Count'\nimport { createDecrementAction } from '../../redux/count_action'\n\n//引入connect用于连接UI组件与redux\nimport { connect } from 'react-redux'\n\n\n\n/*\n    1.mapStateToProps是一个函数，返回一个对象，\n    2.对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——状态\n    3.mapStateToProps用于传递状态\n*/\nfunction mapStateToProps(state) {\n    return {\n        count: state\n    }\n}\n\n\n//函数返回的对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\n\n/*\n    1.mapDispatchToProps是一个函数，返回一个对象，\n    2.对象中的key就作为传递给UI组件props的key，value就作为传递给UI组件props的value——操作状态的方法\n    3.mapDispatchToProps用于传递操作状态的方法\n*/\nfunction mapDispatchToProps(dispatch) {\n    return {\n        jia: (number) => {\n            //通知redux执行加法\n            dispatch(createDecrementAction(number))\n        }\n    }\n}\n\n\n\n\n\n\n/*\n    1.使用connect()()创建并暴露一个Count的容器组件\n    2.connect(mapStateToProps, mapDispatchToProps)(CountUI)\n*/\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI)"],"mappings":"AAAA;AACA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAASC,qBAAqB,QAAQ,0BAA0B;;AAEhE;AACA,SAASC,OAAO,QAAQ,aAAa;;AAIrC;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,KAAK,EAAE;EAC5B,OAAO;IACHC,KAAK,EAAED;EACX,CAAC;AACL;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASE,kBAAkBA,CAACC,QAAQ,EAAE;EAClC,OAAO;IACHC,GAAG,EAAGC,MAAM,IAAK;MACb;MACAF,QAAQ,CAACN,qBAAqB,CAACQ,MAAM,CAAC,CAAC;IAC3C;EACJ,CAAC;AACL;;AAOA;AACA;AACA;AACA;AACA,eAAeP,OAAO,CAACC,eAAe,EAAEG,kBAAkB,CAAC,CAACN,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}